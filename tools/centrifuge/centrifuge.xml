<tool id="centrifuge" name="Centrifuge" version="1.0.3">

    <description>Read-based metagenome characterization</description>

    <!-- ***************************************************************** -->

    <requirements>
        <requirement type="package" version="1.0.3">centrifuge</requirement>
    </requirements>

    <!-- ***************************************************************** -->

    <version_command>centrifuge --version | perl -wnE'print "$1\n" for /centrifuge\S+ version (\S+)/g'</version_command>

    <!-- ***************************************************************** -->

    <command detect_errors="aggressive">
    <![CDATA[

    centrifuge

        --input    '${fn_in}'
        -x '${db.fields.path}'

        --threads  '\${GALAXY_SLOTS:-1}'
        --outdir   './'
        --prefix   results

    ##--General Options------------------------------

        --relAbu   ${general.rel_abund}
        --mode ${general.output_full}
        ${general.filt_plasmid}

    ##--Split-trim Options---------------------------

        --minQ     ${split.min_qual}
        --fixL     ${split.fixed_len}
        --ascii    ${split.qual_offset}

    ##--Filtering Options----------------------------

        --minCov   ${filter.min_cov}
        --minMLHL  ${filter.min_mlhl}
        --cCov     ${filter.c_cov}
        --minLen   ${filter.min_len}
        --minHits  ${filter.min_hits}

    ]]>
    </command>

    <!-- ***************************************************************** -->

    <inputs>

    <section name="input" title="Inputs" expanded="True">

        <repeat name="unpaired" title="Unpaired reads" min="0" default="0">
            <param name="up_reads" type="data_collection" collection_type="paired" format="fastq" label="Paired read collection"/>
        </repeat>

        <repeat name="paired" title="Paired reads" min="0" default="0">
            <param name="p_reads" type="data_collection" collection_type="paired" format="fastq" label="Paired read collection"/>
        </repeat>

        <repeat name="sra" title="SRA accessions" min="0" default="0">
            <param name="sra_reads" type="txt" label="SRA accession"/>
        </repeat>

        <param name="db" type="select" label="Select a reference database">
            <options from_data_table="centrifuge_indices">
                <filter type="sort_by" column="2"/>
                <validator type="no_options" message="No indexes are available for the selected input dataset"/>
            </options>
        </param>

    </section>

    <section name="output" title="Outputs" expanded="False">

        <param argument="--out-fmt" type="select" label="Output format"
            <option value="tab" selected="true">tabular</option>
            <option value="sam">SAM</option>
        </param>

        <param argument="--tab-fmt-cols"  type="txt" label="Output columns" value="readID,seqID,taxID,score,2ndBestScore,hitLength,queryLength,numMatches">
            <sanitizer>
                <valid initial="string.digits,string.digits">
                    <add value="," />
                </valid>
            </sanitizer>
        </param>

    </section>

    <section name="general" title="General options" expanded="False">

        <param argument="--skip"  type="integer" value="" label="Initial reads to skip" />
        <param argument="--upto"  type="integer" value="" label="Stop after reads" />
        <param argument="--trim5" type="integer" value="" label="Trim 5' bases" />
        <param argument="--trim3" type="integer" value="" label="Trim 3' bases" />

        <param argument="--ignore-quals" type="boolean" truevalue="--ignore-quals" falsevalue="" checked="no" label="Ignore qualities" />

        <param argument="--nofw" type="boolean" truevalue="--nofw" falsevalue="" checked="no" label="Don't map forward strand" />
        <param argument="--norc" type="boolean" truevalue="--norc" falsevalue="" checked="no" label="Don't map rev-com strand" />

        <param argument="--qc-filter" type="boolean" truevalue="--qc-filter" falsevalue="" checked="no" label="Filter bad reads" />

    </section>

    <section name="classification" title="Classification" expanded="True">

        <param argument="--min-hitlen"   type="integer" value="22" min="16" label="Minimum hit length" />
        <param argument="--min-totallen" type="integer" value="0"  min="0" label="Minimum total length" />

        <param argument="--host-taxids"  type="txt" label="Host taxonomic IDs">
            <sanitizer>
                <valid initial="string.digits">
                    <add value="," />
                </valid>
            </sanitizer>
        </param>
        <param argument="--exclude-taxids"  type="txt" label="Exclude taxonomic IDs">
            <sanitizer>
                <valid initial="string.digits">
                    <add value="," />
                </valid>
            </sanitizer>
        </param>

    </section>

    </inputs>

    <!-- ***************************************************************** -->

    <outputs>

        <data name="out_tab" format="tabular" label="Centrifuge on ${on_string}: Output" />
            <filter>(output['out-fmt'] == "tab")</filter>
        </data>
        <data name="out_sam" format="sam" label="Centrifuge on ${on_string}: Output" />
            <filter>(output['out-fmt'] == "sam")</filter>
        </data>
        <data name="report" format="txt" label="Centrifuge on ${on_string}: Report" />

    </outputs>

    <!-- ***************************************************************** -->

    <tests>
    </tests>

    <!-- ***************************************************************** -->

    <help>
    <![CDATA[

Overview
--------

**Centrifuge** is a very rapid and memory-efficient system for the
classification of DNA sequences from microbial samples, with better
sensitivity than and comparable accuracy to other leading systems. The system
uses a novel indexing scheme based on the Burrows-Wheeler transform (BWT) and
the Ferragina-Manzini (FM) index, optimized specifically for the metagenomic
classification problem. Centrifuge requires a relatively small index (e.g.,
4.3 GB for ~4,100 bacterial genomes) yet provides very fast classification
speed, allowing it to process a typical DNA sequencing run within an hour.
Together these advances enable timely and accurate analysis of large
metagenomics data sets on conventional desktop computers.

Usage
-----

Following is the manpage for `centrifuge`, which can be linked with the
options above using the help text. Note that not all options are available in
the Galaxy wrapper.

::

    centrifuge [options]* -x <cf-idx> {-1 <m1> -2 <m2> | -U <r> | --sra-acc <SRA accession number>} [-S <filename>] [--report-file <report>]
  
    <cf-idx>   Index filename prefix (minus trailing .X.cf).
    <m1>       Files with #1 mates, paired with files in <m2>.
               Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <m2>       Files with #2 mates, paired with files in <m1>.
               Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <r>        Files with unpaired reads.
               Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <SRA accession number>        Comma-separated list of SRA accession numbers, e.g. --sra-acc SRR353653,SRR353654.
    <filename>      File for classification output (default: stdout)
    <report>   File for tabular report output (default: centrifuge_report.tsv)
  
    <m1>, <m2>, <r> can be comma-separated lists (no whitespace) and can be
    specified many times.  E.g. '-U file1.fq,file2.fq -U file3.fq'.
  
  Options (defaults in parentheses):
  
   Input:
    -q                 query input files are FASTQ .fq/.fastq (default)
    --qseq             query input files are in Illumina's qseq format
    -f                 query input files are (multi-)FASTA .fa/.mfa
    -r                 query input files are raw one-sequence-per-line
    -c                 <m1>, <m2>, <r> are sequences themselves, not files
    -s/--skip <int>    skip the first <int> reads/pairs in the input (none)
    -u/--upto <int>    stop after first <int> reads/pairs (no limit)
    -5/--trim5 <int>   trim <int> bases from 5'/left end of reads (0)
    -3/--trim3 <int>   trim <int> bases from 3'/right end of reads (0)
    --phred33          qualities are Phred+33 (default)
    --phred64          qualities are Phred+64
    --int-quals        qualities encoded as space-delimited integers
    --ignore-quals     treat all quality values as 30 on Phred scale (off)
    --nofw             do not align forward (original) version of read (off)
    --norc             do not align reverse-complement version of read (off)
    --sra-acc          SRA accession ID
  
  Classification:
    --min-hitlen <int>    minimum length of partial hits (default 22, must be greater than 15)
    --min-totallen <int>  minimum summed length of partial hits per read (default 0)
    --host-taxids <taxids> comma-separated list of taxonomic IDs that will be preferred in classification
    --exclude-taxids <taxids> comma-separated list of taxonomic IDs that will be excluded in classification
  
   Output:
    --out-fmt <str>       define output format, either 'tab' or 'sam' (tab)
    --tab-fmt-cols <str>  columns in tabular format, comma separated 
                            default: readID,seqID,taxID,score,2ndBestScore,hitLength,queryLength,numMatches
    -t/--time             print wall-clock time taken by search phases
    --un <path>           write unpaired reads that didn't align to <path>
    --al <path>           write unpaired reads that aligned at least once to <path>
    --un-conc <path>      write pairs that didn't align concordantly to <path>
    --al-conc <path>      write pairs that aligned concordantly at least once to <path>
    (Note: for --un, --al, --un-conc, or --al-conc, add '-gz' to the option name, e.g.
    --un-gz <path>, to gzip compress output, or add '-bz2' to bzip2 compress output.)
    --quiet               print nothing to stderr except serious errors
    --met-file <path>     send metrics to file at <path> (off)
    --met-stderr          send metrics to stderr (off)
    --met <int>           report internal counters & metrics every <int> secs (1)
  
   Performance:
    -o/--offrate <int> override offrate of index; must be >= index's offrate
    -p/--threads <int> number of alignment threads to launch (1)
    --mm               use memory-mapped I/O for index; many 'bowtie's can share
  
   Other:
    --qc-filter        filter out reads that are bad according to QSEQ filter
    --seed <int>       seed for random number generator (0)
    --non-deterministic seed rand. gen. arbitrarily instead of using read attributes
    --version          print version information and quit
    -h/--help          print this usage message

    ]]>
    </help>

    <!-- ***************************************************************** -->
    
    <citations>
        <citation type="doi">10.1101/gr.210641.116</citation>
    </citations>

</tool>
