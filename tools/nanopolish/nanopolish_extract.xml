<tool id="nanopolish_extract" name="Nanopolish::extract" version="0.8.2">

    <description>FAST5 to FASTQ/A extraction</description>

    <!-- ***************************************************************** -->
   
    <!--
    <requirements>
        <requirement type="package" version="0.7.2">nanopolish</requirement>
    </requirements>
    -->

    <!-- ***************************************************************** -->

    <version_command>nanopolish --version | perl -wnE'print "$1\n" for /^nanopolish version (.+)$/mg'</version_command>

    <!-- ***************************************************************** -->

    <command detect_errors="aggressive">
    <![CDATA[

    python3 $__tool_directory__/nanopolish_extract.py $input $output \${GALAXY_SLOTS:-1}

    ]]>
    </command>

    <!-- ***************************************************************** -->

    <inputs>

        <param name="input" type="data" format="fast5.tar" label="Input reads" />
        <param name="out_format" type="select" label="Output format">
            <option value="fastq" selected="true">fastq</option>
            <option value="fasta">fasta</option>
        </param>

    </inputs>

    <!-- ***************************************************************** -->

    <outputs>

        <data name="output" format="fastqsanger" label="${tool.name} on ${on_string}">
            <change_format>
                <when input="out_format" value="fasta" format="fasta" />
            </change_format>
        </data>

    </outputs>

    <!-- ***************************************************************** -->

    <tests>
        <test>
            <param name="input" value="test_data.fast5.tar.gz" ftype="fast5.tar.gz" />
            <output name="output" file="test_data.fastq" compare="sim_size" delta="0"/>
        </test>
    </tests>

    <!-- ***************************************************************** -->

    <help>
    <![CDATA[

**Description**

Nanopolish is a software package for signal-level analysis of Oxford Nanopore
sequencing data. Nanopolish can calculate an improved consensus sequence for a
draft genome assembly, detect base modifications, call SNPs and indels with
respect to a reference genome and more.

The Galaxy wrapper has modified nanopolish to take a gzip tarball of FAST5 reads
as input, such as can be produced by `poretools combine`, and always outputs a
single FASTQ file.

This is the `extract` module.

    ]]>
    </help>

    <!-- ***************************************************************** -->
    
    <citations>
    </citations>

</tool>
