<tool id="gottcha" name="GOTTCHA" version="0.0.1">
    <description>Read-based metagenome characterization</description>
    <version_command>gottcha.pl -h | perl -wnE'print "$1\n" for /VERSION: (\S+)/g'</version_command>
    <stdio>
        <exit_code range="1:" level="fatal" description="Error occurred. Please check Tool Standard Error" />
    </stdio>

    <command>
    <![CDATA[

    gottcha.pl

        --input    "${fn_in}"
        --database "${db.fields.path}"
        --threads  "\${GALAXY_SLOTS:-1}"
        --outdir   "./"
        --prefix   results
        --relAbu   $rel_abund
        --minQ     $min_qual
        --fixL     $fixed_len
        --ascii    $qual_offset
        --minCov   $min_cov
        --minMLHL  $min_mlhl
        --cCov     $c_cov
        --minLen   $min_len
        --minHits  $min_hits

    #if str($output_full) == "1":
        --mode full
    #else
        --mode summary
    #end if

    #if str($filt_plasmid) == "1":
        --noPlasmidHit
    #end if

    ]]>
    </command>

    <inputs>
        <param name="fn_in" type="data" format="fastq" label="Input reads" help="FASTQ format" />
        <param name="db" type="select" label="Select a reference database">
            <options from_data_table="gottcha">
                <filter type="sort_by" column="2"/>
                <validator type="no_options" message="No indexes are available for the selected input dataset"/>
            </options>
        </param>
        <param name="rel_abund" type="select" label="Abundance field" help="The output field to use in calculating relative abundance">
            <option value="LINEAR_DOC" selected="true">Linear DOC</option>
            <option value="LINEAR_LENGTH">Linear length</option>
            <option value="TOTAL_BP_MAPPED">Total bp mapped</option>
            <option value="HIT_COUNT">Hit count</option>
        </param>
	    <param name="output_full" type="boolean" truevalue="1" falsevalue="0" checked="no" label="Output full report" help="Include full report as an output dataset (in addition to summary table)" />
	    <param name="filt_plasmid" type="boolean" truevalue="1" falsevalue="0" checked="no" label="Filter plasmid hits" help="If true, ignore alignments to plasmids" />
        <param name="min_qual" size="4" type="integer" value="20" min="0" max="41" label="Minimum quality" help="Minimum quality for a read to be considered valid (0-41)" />
        <param name="fixed_len" size="4" type="integer" value="30" min="1" label="Trim length" help="Fixed length to which each read will be trimmed" />
        <param name="min_cov" size="5" type="float" value="0.005" min="0" label="Minimum coverage" help="Minimum linear coverage to be considered valid in abundance calculation" />
        <param name="min_mlhl" size="4" type="integer" value="5" min="0" label="Minimum MLHL" help="Minimum mean-linear-hit-length to be considered valid in abundance calculations"  />
        <param name="c_cov" size="5" type="float" value="0.006" min="0" label="Critical coverage for MLHL" help="Critical coverage below which Minimum MLHL will cause an organism to fail" />
        <param name="min_len" size="4" type="integer" value="100" min="0" label="Minimum length" help="Minimum unique length to be considered valid in abundance calculation" />
        <param name="min_hits" size="4" type="integer" value="10" min="0" label="Minimum hits" help="Minimum number of hits to be considered valid in abundance calculation" />
        <param name="qual_offset" type="select" label="Quality offset" help="Base call quality offset for ASCII encoding">
            <option value="33" selected="true">33</option>
            <option value="64">64</option>
        </param>
    </inputs>

    <outputs>
        <data name="out_log" format="txt" label="GOTTCHA on ${on_string}: Log" from_work_dir="results.gottcha.log" />
        <data name="out_tsv" format="txt" label="GOTTCHA on ${on_string}: Summary" from_work_dir="results.gottcha.tsv" />
        <data name="out_full" format="txt" label="GOTTCHA on ${on_string}: Full Report" from_work_dir="results.gottcha_full.tsv">
            <filter>output_full is True</filter>
        </data>
    </outputs>

    <tests>
    </tests>
    <citations>
        <citation type="doi">10.1093/nar/gkv180</citation>
    </citations>
    <help>
    <![CDATA[
**Interpreting Results**

GOTTCHA reports profiling results in a neat summary table
by default. The tsv file will list the organism(s) at all taxonomic
levels from STRAIN to PHYLUM, their linear length, total bases mapped,
linear depth of coverage, and the normalized linear depth of coverage. The
linear depth of coverage (LINEAR_DOC) is used to calculate relative
abundance of each organism or taxonomic name in the sample.

Summary table:

=================  ==============================
Column             Description
=================  ==============================
LEVEL              taxonomic rank
NAME               taxonomic name
REL_ABUNDANCE      relative abundance (equivalent to NORM_COV by default)
LINEAR_LENGTH      number of non-overlapping bases covering the signatures
TOTAL_BP_MAPPED    sum total of all hit lengths recruited to signatures
HIT_COUNT          number of hits recruited to signatures
HIT_COUNT_PLASMID  number of hits recruited to signatures
READ_COUNT         number of reads recruited to signatures
LINEAR_DOC         linear depth-of-coverage (TOTAL_BP_MAPPED / LINEAR_LENGTH)
NORM_COV           normalized linear depth-of-coverage (LINEAR_DOC / SUM(LINEAR_DOC in certain level))
=================  ==============================

Other than a summary table, "full" report mode will report a table with more
detail information from unfiltered results.  The explanation of each column in
the full report is as follows:

==================================  ==========================
Column                              Description
==================================  ==========================
RANKNAME                            (REPLICON)  = replicon name (source + plasmid/chr)<br>(STRAIN)    = strain name<br>(SPECIES)   = species name<br>(GENUS)     = genus name<br>...
NUM_SUBRANKS                        no. of distinct subranks for the current rank<br>(E.g.  the no. of SPECIES under the current GENUS)
GPROJ_ENTRIES                       no. of genome projects (i.e. STRAINS) under this RANK NAME
LINEAR_LENGTH                       N/O_LENGTH<br>= non-overlapping length <br>= no. of non-overlapping bases covering the unique DB
UNIQUE_DB_LENGTH                    no. of unique bases for this organism
FULL_REFDB_LENGTH                   no. of bases in full reference
LINEAR_COV                          LINEAR_LENGTH / UNIQUE_DB_LENGTH
HIT_COUNT                           no. of hits recruited to genome
HIT_COUNT_PLASMID                   no. of hits recruited to plasmid
READ_COUNT                          no. of reads recruited to genome
FULL_HIT_COUNT                      no. of full-length read hits recruited to genome
TOTAL_BP_MAPPED                     sum total of all hit lengths recruited to genome<br>= hit1.length + hit2.length + ... hitX.length<br>[formerly FOLD_COV_UNIQUE_SAMPLE]
LINEAR_DOC                          linear depth-of-coverage<br>= fold coverage of sample's LINEAR_LENGTH <br>= TOTAL_BP_MAPPED / LINEAR_LENGTH<br>[formerly FOLD_COV_UNIQUE_REFDB]
UREF_DOC                            unique reference's depth-of-coverage<br>= fold coverage of reference's UNIQUE_DB_LENGTH<br>= TOTAL_BP_MAPPED / UNIQUE_DB_LENGTH
UREF_CMAX                           MAX COVERAGE OF REFDB POSSIBLE, GIVEN SAMPLE INPUT BASES<br>= Cmax = L0/l0 <br>= TOTAL_INPUT_BASES / UNIQUE_DB_LENGTH
FRAC_HITS_POSSIBLE                  HIT_COUNT / TOTAL_INPUT_READS
FRAC_BASES_POSSIBLE                 TOTAL_BP_MAPPED / TOTAL_INPUT_BASES
MEAN_HIT_LENGTH                     TOTAL_BP_MAPPED / HIT_COUNT
MEAN_LINEAR_HIT_LENGTH              LINEAR_LENGTH / HIT_COUNT
best_SUBRANK                        name of the best subrank (determined by the highest LINEAR_COV)
best_NUM_SUBRANKS                   no. of subranks supporting current "SUBRANK"<br>{SS} = no. of GI entries supporting this strain<br>{S}  = no. of strains supporting this species<br>{G}  = no. of species supporting this genus<br>{F}  = no. of genera supporting this family<br>{O}  = no. of families supporting this order <br>{C}  = no. of orders supporting this class<br>{P}  = no. of classes supporting this phylum
best_GPROJ_ENTRIES                  no. of genome projects (i.e. STRAINS) under this best_SUBRANK<br>{SS} = no. of genome projects supporting this strain = 1<br>{S}  = no. of genome projects supporting this species<br>{G}  = no. of genome projects supporting this genus<br>{F}  = no. of genome projects supporting this family<br>{O}  = no. of genome projects supporting this order<br>{C}  = no. of genome projects supporting this class<br>{P}  = no. of genome projects supporting this phylum
best_LINEAR_LENGTH                 
best_UNIQUE_DB_LENGTH              
best_FULL_REFDB_LENGTH             
best_LINEAR_COV                    
best_HIT_COUNT                     
best_FULL_HIT_COUNT                
best_TOTAL_BP_MAPPED               
best_LINEAR_DOC (a.k.a. Abundance) 
best_UREF_DOC                      
best_UREF_CMAX                     
best_FRAC_HITS_POSSIBLE            
best_FRAC_BASES_POSSIBLE           
best_MEAN_HIT_LENGTH               
best_MEAN_LINEAR_HIT_LENGTH        
CONTIG_COUNT                        no. of contiguous fragments<br> (after mapping & generating non-overlapping fragments)
CONTIG_MEAN_LEN                     mean length of contigs (bp)
CONTIG_STDEV_LEN                    standard deviation of contig lengths (bp)
CONTIG_MINLEN                       length of smallest contig
CONTIG_MAXLEN                       length of largest contig
CONTIG_HISTOGRAM(LEN:FREQ)          contig Length Histogram<br> (in the format contigLength:frequency)
==================================  ==========================

    ]]>
    </help>
</tool>
